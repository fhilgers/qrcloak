[bindings.kotlin]

[bindings.kotlin.custom_types.WrapperI32Stream]
from_custom = """
{}.inner
"""
imports = ["com.example.qrypt.MyFlow"]
into_custom = """
MyFlow({}, suspend { {}.pollNext()!! })
"""
type_name = "MyFlow<I32Stream, Int>"

#[bindings.kotlin.custom_types.ViewModelInner]
#type_name = "MyViewModel"
#imports = [ "com.example.qrypt.MyViewModel" ]
#into_custom = """
#MyViewModel({})
#"""
#from_custom = """
#{}.inner
#"""


#[bindings.kotlin.custom_types.ImmutableI32]
##Name of the type in the Kotlin code
#type_name = "ImmutableSignal<Int, ImmutableWrapperI32>"
##Classes that need to be imported
#imports = [ "com.example.qrypt.ui.screens.ImmutableSignal" ]
##Expression to convert the builtin type the custom type.  In this example, `{}` will be replaced with the int value.
#into_custom = "object : ImmutableSignal<Int, ImmutableWrapperI32> { override val inner: ImmutableWrapperI32 = {}; override suspend fun get(): Int? = {}.poll() }"
##Expression to convert the custom type to the builtin type.  In this example, `{}` will be replaced with the URL value.
#from_custom = "{}.inner"

#[bindings.kotlin.custom_types.ImmutableString]
##Name of the type in the Kotlin code
#type_name = "ImmutableSignal<String, ImmutableWrapperString>"
##Classes that need to be imported
#imports = [ "com.example.qrypt.ui.screens.ImmutableSignal" ]
##Expression to convert the builtin type the custom type.  In this example, `{}` will be replaced with the int value.
#into_custom = "object : ImmutableSignal<String, ImmutableWrapperString> { override val inner: ImmutableWrapperString = {}; override suspend fun get(): String? = {}.poll() }"
##Expression to convert the custom type to the builtin type.  In this example, `{}` will be replaced with the URL value.
#from_custom = "{}.inner"
